# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2

orbs:
  codecov: codecov/codecov@1.2.3

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:12-browsers

set_env: &set_env
  name: Setup Environment Variables
  command: |
    env
    if [[ $CIRCLE_PULL_REQUEST ]]
    then
      echo 'Fetching Base Commit from GitHub'
      echo 'export CIRCLE_PR_NUMBER="${CIRCLE_PR_NUMBER:-${CIRCLE_PULL_REQUEST##*/}}"' >> $BASH_ENV
      source $BASH_ENV
      echo "export CIRCLE_PR_BASE_SHA=`curl -s https://api.github.com/repos/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/pulls/${CIRCLE_PR_NUMBER} | jq -r '.base.sha'`" >> $BASH_ENV
      echo 'export AFFECTED_ARGS="--base ${CIRCLE_PR_BASE_SHA}"' >> $BASH_ENV
    else
      echo 'Fetching Base Commit from Deploy Cache'
      if [[ ! -f dist/last-deploy.txt ]]
      then
        mkdir dist && git rev-parse HEAD~1 > dist/last-deploy.txt
      fi
      echo 'export AFFECTED_ARGS="--base $(cat dist/last-deploy.txt)"' >> $BASH_ENV
    fi
    source $BASH_ENV
    echo $AFFECTED_ARGS

yarn_cache: &yarn_cache
  keys:
    - last-yarn-1|{{ .Environment.CIRCLE_BRANCH }}|{{ .Environment.CIRCLE_WORKFLOW_ID }}|{{ .Environment.CIRCLE_WORKFLOW_JOB_ID }}
    - last-yarn-1|{{ .Environment.CIRCLE_BRANCH }}|{{ .Environment.CIRCLE_WORKFLOW_ID }}|
    - last-yarn-1|{{ .Environment.CIRCLE_BRANCH }}|
    - last-yarn-1|
  paths:
    - ~/.cache
    - node_modules
    - dist/tools
    - dist/libs

deploy_cache: &deploy_cache
  keys:
    - last-deploy-1|{{ .Environment.CIRCLE_BRANCH }}|{{ .Environment.CIRCLE_WORKFLOW_ID }}|{{ .Environment.CIRCLE_WORKFLOW_JOB_ID }}
    - last-deploy-1|{{ .Environment.CIRCLE_BRANCH }}|{{ .Environment.CIRCLE_WORKFLOW_ID }}|
    - last-deploy-1|{{ .Environment.CIRCLE_BRANCH }}|
    - last-deploy-1|
  paths:
    - dist/last-deploy.txt

build_cache: &build_cache
  keys:
    - last-build-1|{{ .Environment.CIRCLE_BRANCH }}|{{ .Environment.CIRCLE_WORKFLOW_ID }}|{{ .Environment.CIRCLE_WORKFLOW_JOB_ID }}
    - last-build-1|{{ .Environment.CIRCLE_BRANCH }}|{{ .Environment.CIRCLE_WORKFLOW_ID }}|
    - last-build-1|{{ .Environment.CIRCLE_BRANCH }}|
    - last-build-1|
  paths:
    - dist/apps
    - dist/libs

coverage_cache: &coverage_cache
  keys:
    - last-coverage-1|{{ .Environment.CIRCLE_BRANCH }}|{{ .Environment.CIRCLE_WORKFLOW_ID }}|{{ .Environment.CIRCLE_WORKFLOW_JOB_ID }}
    - last-coverage-1|{{ .Environment.CIRCLE_BRANCH }}|{{ .Environment.CIRCLE_WORKFLOW_ID }}|
    - last-coverage-1|{{ .Environment.CIRCLE_BRANCH }}|
    - last-coverage-1|
  paths:
    - coverage

yarn_install: &yarn_install
  name: Install Dependencies
  command: yarn install --frozen-lockfile

jobs:
  install:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *yarn_cache
      - run: *yarn_install
      - save_cache: *yarn_cache

  check-formatting:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *yarn_cache
      - restore_cache: *deploy_cache
      - run: *set_env
      - run: yarn format:check ${AFFECTED_ARGS}
  lint:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *yarn_cache
      - restore_cache: *deploy_cache
      - run: *set_env
      - run: ./node_modules/.bin/nx workspace-lint
      - run: yarn affected:lint ${AFFECTED_ARGS} --parallel
  build:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *yarn_cache
      - restore_cache: *deploy_cache
      - run: *set_env
      - run: yarn affected:build -- ${AFFECTED_ARGS} --parallel --configuration production
      - save_cache: *build_cache
      - store_artifacts:
          path: dist
  test:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *yarn_cache
      - restore_cache: *deploy_cache
      - restore_cache: *coverage_cache
      - run: *set_env
      - run: yarn affected:test -- ${AFFECTED_ARGS} --parallel -- --ci --code-coverage
      - save_cache: *coverage_cache
      - store_artifacts:
          path: coverage
      - codecov/upload:
          file: coverage/**/lcov.info

  e2e:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *yarn_cache
      - restore_cache: *deploy_cache
      - run: *set_env
      - run: yarn affected:e2e -- ${AFFECTED_ARGS} --configuration production -- --headless
      - store_artifacts:
          path: dist/cypress

  deploy:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *yarn_cache
      - restore_cache: *deploy_cache
      - run: *set_env
      - run: yarn affected -- --target deploy ${AFFECTED_ARGS}
      - run: cat dist/last-deploy.txt
      - run: git rev-parse HEAD
      - run: git rev-parse HEAD > dist/last-deploy.txt
      - run: cat dist/last-deploy.txt
      - save_cache: *deploy_cache

workflows:
  version: 2
  pr_check:
    jobs:
      - install
      - lint:
          requires:
            - install
      - test:
          requires:
            - install
      - check-formatting:
          requires:
            - install
      - build:
          requires:
            - install
      - e2e:
          requires:
            - install
      - deploy:
          filters:
            branches:
              only:
                - master
          requires:
            - check-formatting
            - lint
            - test
            - build
            - e2e
