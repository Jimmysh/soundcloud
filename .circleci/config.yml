# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2

orbs:
  codecov: codecov/codecov@1.2.3
  codacy: codacy/coverage-reporter@12.1.7

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:12-browsers

set_env: &set_env
  name: Setup Environment Variables
  command: |
    echo 'export AFFECTED_ARGS="$(node dist/tools/scripts/set-nx-env.js --mode=test)"' >> $BASH_ENV
    source $BASH_ENV
    echo $AFFECTED_ARGS
yarn_cache: &yarn_cache
  keys:
    - node-deps-node12-{{ checksum "yarn.lock" }}
    # fallback to using the latest cache if no exact match is found
    - node-deps-node12-

deploy_cache: &deploy_cache
  keys:
    - last-deploy-sha-{{ .Environment.CIRCLE_WORKFLOW_ID }}
    - last-deploy-sha-
  paths:
    - dist/last-deploy.txt

coverage_cache: &coverage_cache
  key: cache-coverage
  paths:
    - coverage
yarn_install: &yarn_install
  name: Install Dependencies
  command: yarn install --frozen-lockfile --non-interactive

jobs:
  install:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          <<: *yarn_cache
      - run:
          <<: *yarn_install
      - save_cache:
          key: node-deps-node12-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache
            - node_modules
  check-formatting:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          <<: *deploy_cache
      - run:
          <<: *set_env
      - restore_cache:
          <<: *yarn_cache
      - run: yarn format:check ${AFFECTED_ARGS}
  lint:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          <<: *deploy_cache
      - run:
          <<: *set_env
      - restore_cache:
          <<: *yarn_cache
      - run: ./node_modules/.bin/nx workspace-lint
      - run: yarn affected:lint ${AFFECTED_ARGS} --parallel
  build:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          <<: *deploy_cache
      - run:
          <<: *set_env
      - restore_cache:
          <<: *yarn_cache
      - run: yarn affected:build -- ${AFFECTED_ARGS} --parallel --configuration production
      - save_cache:
          key: build-{{ .Environment.CIRCLE_WORKFLOW_ID }}
          paths:
            - dist
      - store_artifacts:
          path: dist
  test:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          <<: *deploy_cache
          <<: *coverage_cache
      - run:
          <<: *set_env
      - restore_cache:
          <<: *yarn_cache
      - run: yarn affected:test -- ${AFFECTED_ARGS} --parallel -- --ci --code-coverage
      - save_cache:
          <<: *coverage_cache
      - store_artifacts:
          path: coverage
      - codecov/upload:
          file: coverage/**/lcov.info

  e2e:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          <<: *deploy_cache
      - run:
          <<: *set_env
      - restore_cache:
          <<: *yarn_cache
      - run: yarn affected:e2e -- ${AFFECTED_ARGS} --configuration production -- --headless
      - store_artifacts:
          path: dist/cypress

  deploy:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          <<: *deploy_cache
      - run:
          <<: *set_env
      - restore_cache:
          <<: *yarn_cache
      - restore_cache:
          key: build-{{ .Environment.CIRCLE_WORKFLOW_ID }}
      - run: yarn affected -- --target deploy ${AFFECTED_ARGS}
      - run: cat dist/last-deploy.txt
      - run: git rev-parse HEAD
      - run: git rev-parse HEAD > dist/last-deploy.txt
      - run: cat dist/last-deploy.txt
      - save_cache: *deploy_cache

workflows:
  version: 2
  pr_check:
    jobs:
      - install
      - lint:
          requires:
            - install
      - test:
          requires:
            - install
      - check-formatting:
          requires:
            - install
      - build:
          requires:
            - install
      - e2e:
          requires:
            - install
      - deploy:
          filters:
            branches:
              only:
                - master
          requires:
            - check-formatting
            - lint
            - test
            - build
            - e2e
